image: lorisleiva/laravel-docker:latest

stages:
  - deploy
  - manual

.ssh_script: &ssh_script
  before_script: # Setup the SSH agent etc
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

.deploy_script: &deploy_script
  <<: *ssh_script
  script:
    - ssh-add <(echo "$SERVER_PRIVATE_KEY") # Add SSH key
    - cd dev # go to package directory
    - tar czf $DIR_NEW.tar.gz --exclude='./vendor' --exclude='./node_modules' ./* # zip up the site
    - scp $DIR_NEW.tar.gz $DEPLOYENY_USER@$SERVER_IP:$DEPLOYMENT_ROOT/$DIR_NEW.tar.gz # send to server
    - ssh -p22 $DEPLOYENY_USER@$SERVER_IP "cd $DEPLOYMENT_ROOT && mkdir $DIR_NEW -p && mv $DIR_NEW.tar.gz $DIR_NEW && cd $DIR_NEW && tar xzf $DIR_NEW.tar.gz" # setup new version
    - ssh -p22 $DEPLOYENY_USER@$SERVER_IP "source ~/.bashrc && cd $DEPLOYMENT_ROOT && cp $DIR_CURRENT/.env $DIR_NEW/.env && cp $DIR_CURRENT/.htaccess $DIR_NEW/.htaccess && cd $DIR_NEW && composer install && npm install && npm run prod"
    - ssh -p22 $DEPLOYENY_USER@$SERVER_IP "source ~/.bashrc && cd $DEPLOYMENT_ROOT && rm -rf $DIR_OLD && mv -f $DIR_CURRENT $DIR_OLD && mv -f $DIR_NEW $DIR_CURRENT && cd $DIR_CURRENT && composer dump-autoload && php artisan migrate && php artisan optimize && supervisorctl restart all" # move new to current & current to old

deploy_staging:
  stage: deploy
  only:
    - develop # Run only on develop branch
  variables:
    DEPLOYMENT_ROOT: '/var/www'
    DEPLOYENY_USER: 'deploy'
    DIR_CURRENT: 'html'
    DIR_OLD: 'html_previous'
    DIR_NEW: 'deployment'
    SERVER_IP: $STAGING_IP
  <<: *deploy_script

deploy_demo:
  stage: deploy
  only:
    - master # Run only on develop branch
  variables:
    DEPLOYMENT_ROOT: '/var/www'
    DEPLOYENY_USER: 'deploy'
    DIR_CURRENT: 'html'
    DIR_OLD: 'html_previous'
    DIR_NEW: 'deployment'
    SERVER_IP: $DEMO_IP
  <<: *deploy_script

total_reseed_staging:
  stage: manual
  only:
    - develop # Run only on develop branch
  variables:
    DEPLOYMENT_ROOT: '/var/www'
    DEPLOYENY_USER: 'deploy'
    DIR_CURRENT: 'html'
    DIR_OLD: 'html_previous'
    DIR_NEW: 'deployment'
    SERVER_IP: $STAGING_IP
  <<: *ssh_script
  script:
    - ssh-add <(echo "$SERVER_PRIVATE_KEY") # Add SSH key
    - ssh -p22 $DEPLOYENY_USER@$SERVER_IP "cd $DEPLOYMENT_ROOT && cd $DIR_CURRENT && php artisan migrate:fresh --seed && php artisan mm:populate" # run reset
  when: manual

reset_staging:
  stage: manual
  only:
    - develop # Run only on develop branch
  variables:
    DEPLOYMENT_ROOT: '/var/www'
    DEPLOYENY_USER: 'deploy'
    DIR_CURRENT: 'html'
    DIR_OLD: 'html_previous'
    DIR_NEW: 'deployment'
    SERVER_IP: $STAGING_IP
  <<: *ssh_script
  script:
    - ssh-add <(echo "$SERVER_PRIVATE_KEY") # Add SSH key
    - ssh -p22 $DEPLOYENY_USER@$SERVER_IP "cd $DEPLOYMENT_ROOT && cd $DIR_CURRENT && php artisan mm:reset" # run reset
  when: manual

reset_demo:
  stage: manual
  only:
    - master # Run only on develop branch
  variables:
    DEPLOYMENT_ROOT: '/var/www'
    DEPLOYENY_USER: 'deploy'
    DIR_CURRENT: 'html'
    DIR_OLD: 'html_previous'
    DIR_NEW: 'deployment'
    SERVER_IP: $DEMO_IP
  <<: *ssh_script
  script:
    - ssh-add <(echo "$SERVER_PRIVATE_KEY") # Add SSH key
    - ssh -p22 $DEPLOYENY_USER@$SERVER_IP "cd $DEPLOYMENT_ROOT && cd $DIR_CURRENT && php artisan mm:reset" # run reset
  when: manual

total_reseed_demo:
  stage: manual
  only:
    - master # Run only on develop branch
  variables:
    DEPLOYMENT_ROOT: '/var/www'
    DEPLOYENY_USER: 'deploy'
    DIR_CURRENT: 'html'
    DIR_OLD: 'html_previous'
    DIR_NEW: 'deployment'
    SERVER_IP: $DEMO_IP
  <<: *ssh_script
  script:
    - ssh-add <(echo "$SERVER_PRIVATE_KEY") # Add SSH key
    - ssh -p22 $DEPLOYENY_USER@$SERVER_IP "cd $DEPLOYMENT_ROOT && cd $DIR_CURRENT && php artisan migrate:fresh --seed && php artisan mm:populate" # run reset
  when: manual
