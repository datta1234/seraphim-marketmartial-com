<?php

namespace App\Http\Controllers\TradeScreen;

use App\Models\MarketRequest\UserMarketRequest;
use App\Models\StructureItems\Market;
use App\Models\StructureItems\TradeStructure;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Models\StructureItems\TradeStructureGroup;

class MarketUserMarketReqeustController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @param  \App\Models\StructureItems\Market  $market
     * @return \Illuminate\Http\Response
     */
    public function index(Market $market)
    {
        $userMarketRequests = $market->userMarketRequests()->select([
                    "id", 
                    "trade_structure_id", 
                    "created_at"
        ])->with([
            'tradeStructure' => function($q){ 
                $q->select([
                    "id", 
                    "title"]); 
            }, 
            'userMarketRequestGroups' => function($q){ 
                $q->select([
                    "id", 
                    "user_market_request_id", 
                    "trade_structure_group_id"
                ]); 
            },
            'userMarketRequestGroups.tradeStructureGroup' => function($q){ 
                $q->select([
                    "id", 
                    "title"
                ]); 
            },
            'userMarketRequestGroups.userMarketRequestItems' => function($q){ 
                $q->select([
                    "id", 
                    "value", 
                    "item_id", 
                    "user_market_request_group_id"
                ]); 
            },
            'userMarketRequestGroups.userMarketRequestItems.item' => function($q){ 
                $q->select([
                    "id", 
                    "title"
                ]); 
            }
        ])->get();

        $output = $userMarketRequests->map(function($tradeable) {
            return [
                "id"                => $tradeable->id,
                "trade_structure"   => $tradeable->tradeStructure->title,
                "trade_items"       => $tradeable->userMarketRequestGroups
                 ->keyBy('tradeStructureGroup.title')
                 ->map(function($group) {
                    return $group->userMarketRequestItems->keyBy('item.title')->map(function($item) {
                        return $item->value;
                    });
                }),
                "attributes"        => [
                    // generated by server
                    "state"         => "",
                    "bid_state"     => "",
                    "offer_state"   => ""
                ],
                "quotes"    => [
                    // UserMarketQuote
                ],
                // AND
                "quote:"    => [], //UserMarketQuote
                // OR - show quote to all, user_market to interest & market maker
                "user_market"   => [], //UserMarket

                "created_at"    => $tradeable->created_at
            ];
        });

        // $output
        return $output;
    }

    /**
     * Show the form for creating a new resource.
     *
     * @param  \App\Models\StructureItems\Market  $market
     * @return \Illuminate\Http\Response
     */
    public function create(Market $market)
    {

        // "id": 1,
        // "trade_structure": "TS_1",
        // "trade_items": {
        //     "default": {
        //         "Expiration Date": "2018-01-01 00:00:00",
        //         "Strike": "20 000"
        //     }
        // },


        //UserMarketRequest::create();
        //user_market_request_tradables
       
        //user_market_request_groups

        // generate groups based of the group 

        //use this to refer to the 
        $tradeStructure = TradeStructure::where('title','Outright')->with('tradeStructureGroups.items')->first();


        $request->input('trade_structure_groups');

        foreach ($tradeStructureGroups as $group) 
        {
            $tradeStructureGroups = new TradeStructureGroup();

        }

        //user_market_request_items
            //Quanitity
            //Strke
            //experation
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\StructureItems\Market  $market
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request, Market $market)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\StructureItems\Market  $market
     * @param  \App\Models\MarketRequest\UserMarketRequest  $userMarketRequest
     * @return \Illuminate\Http\Response
     */
    public function show(Market $market, UserMarketRequest $userMarketRequest)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  \App\Models\StructureItems\Market  $market
     * @param  \App\Models\MarketRequest\UserMarketRequest  $userMarketRequest
     * @return \Illuminate\Http\Response
     */
    public function edit(Market $market, UserMarketRequest $userMarketRequest)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\StructureItems\Market  $market
     * @param  \App\Models\MarketRequest\UserMarketRequest  $userMarketRequest
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Market $market, UserMarketRequest $userMarketRequest)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\StructureItems\Market  $market
     * @param  \App\Models\MarketRequest\UserMarketRequest  $userMarketRequest
     * @return \Illuminate\Http\Response
     */
    public function destroy(Market $market, UserMarketRequest $userMarketRequest)
    {
        //
    }
}
